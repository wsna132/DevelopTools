domain是核心层，主要包括：
Interactor  负责实际的数据访问，可能会有多个小类类负责访问对应种类的数据
Model   模型层
Repository 对外返回层，介于业务逻辑层与数据访问层之间。它的存在让领域层(业务逻辑层)感觉不到数据访问层的存在，它提供一个类似集合的接口提供给领域层(业务逻辑层)进行领域对象的访问
        Repository 模式实际用途：更换、升级 ORM 引擎，不影响业务逻辑
        Repository 模式能提高测试效率，单元测试时，用 Mock 对象代替实际的数据库存取，可以成倍地提高测试用例运行速度
Executor  包涵盖了使得Interactor在后台运行所需要的代码